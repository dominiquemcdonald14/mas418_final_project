setwd("/Users/tixradmin/Documents/GitHub/mas418_final_project/Glassdoor/Clean_R_Danny")
write.csv(salary_data, "salary.csv")
salary_data %>%
filter(role %in% c("Machine Learning", "Applied Scientist"))
check <- salary_data %>%
filter(role %in% c("Machine Learning", "Applied Scientist"))
library(tidyverse)
setwd("/Users/tixradmin/Documents/GitHub/mas418_final_project/Glassdoor")
job_data <- read.csv("jobs_glassdoor_dataset.csv")
setwd("/Users/tixradmin/Documents/GitHub/mas418_final_project/Glassdoor/Clean_R_Danny")
library(tidyverse)
setwd("/Users/tixradmin/Documents/GitHub/mas418_final_project/Glassdoor")
job_data <- read.csv("jobs_glassdoor_dataset.csv")
setwd("/Users/tixradmin/Documents/GitHub/mas418_final_project/Glassdoor/Clean_R_Danny")
View(job_data)
salary_data <- job_data %>%
filter(!is.na(company_salary))
str_extract_all("Employer est.:$78K - $162K ", "[0-9]+")
for (i in 1:nrow(salary_data)) {
temp <- str_extract_all(salary_data$company_salary[i], "[0-9]+")[[1]]
if (length(temp) == 2) {
salary_temp <- mean(as.numeric(temp))
} else {
salary_temp <- as.numeric(temp)
}
salary_data$salary[i] <- salary_temp
}
write.csv(salary_data, "salary.csv")
### Next find the roles
### Role
### Level
role <- c("Data Scientist", "Data Analytics", "Applied Scientist",
"Data Engineer", "Software Engineer", "Data Integration",
"Machine Learning", "Systems Engineer", "Business Analytics",
"Statistician", "Data Science", "Data Analyst")
role_change <- c("Data Scientist", "Data Analyst", "Machine Learning",
"Data Engineer", "Others", "Others",
"Machine Learning", "Others", "Data Analyst",
"Data Scientist", "Data Scientist", "Data Analyst")
for (i in 1:nrow(salary_data)) {
temp <- salary_data$company_offeredRole[i]
role_temp <- role_change[str_detect(temp, role)]
salary_data$role[i] <- role_temp
}
table(salary_data$role)
write.csv(salary_data, "salary.csv")
check <- salary_data %>%
filter(role %in% c("Machine Learning", "Applied Scientist"))
View(salary_data)
### Next location
salary_dat
### Next location
salary_data
salary_data$company_roleLocation
temp <- "Rosslyn, VA"
length(temp)
check <- length(temp)
substr("Rosslyn, VA", check -2, check)
check
check <- length(temp)
check <- nchar(temp)
substr("Rosslyn, VA", check-2, check)
substr("Rosslyn, VA", check-1, check)
i = 1
temp <- salary_data$company_roleLocation[i]
num <- nchar(temp)
num
### Next location
for (i in 1:nrow(salary_data)) {
temp <- salary_data$company_roleLocation[i]
num <- nchar(temp)
if (temp == "Remote") {
salary_data$location[i] <- "Remote"
} else {
salary_data$location[i] <- substr(temp, num-1, num)
}
}
View(salary_data)
table(salary_data$location)
### Also Skills
salary_data %>%
mutate(R = ifelse(str_detect(listing_jobDesc, "R"), 1, 0),
Python = ifelse(str_detect(listing_jobDesc, "Python"), 1, 0),
SQL = ifelse(str_detect(listing_jobDesc, "SQL"), 1, 0))
### Also Skills
check <- salary_data %>%
mutate(R = ifelse(str_detect(listing_jobDesc, "R"), 1, 0),
Python = ifelse(str_detect(listing_jobDesc, "Python"), 1, 0),
SQL = ifelse(str_detect(listing_jobDesc, "SQL"), 1, 0))
View(check)
sum(check$R)/nrow(check)
sum(check$SQL)/nrow(check)
sum(check$R)/nrow(check)
sum(check$Python)/nrow(check)
sum(check$SQL)/nrow(check)
sum(check$SQL)
sum(check$Python)
sum(check$R)
### Also Skills
salary_data <- salary_data %>%
mutate(R = ifelse(str_detect(listing_jobDesc, "R"), 1, 0),
Python = ifelse(str_detect(listing_jobDesc, "Python"), 1, 0),
SQL = ifelse(str_detect(listing_jobDesc, "SQL"), 1, 0))
sum(salary_data$R)/nrow(check)
sum(salary_data$Python)/nrow(check)
sum(salary_data$SQL)/nrow(check)
write.csv(salary_data, "salary.csv")
library(tidyverse)
setwd("/Users/tixradmin/Documents/GitHub/mas418_final_project/Glassdoor/output")
job_data <- read.csv("output_.csv")
setwd("/Users/tixradmin/Documents/GitHub/mas418_final_project/Glassdoor/Clean_R_Danny")
View(job_data)
job_data %>% distinct()
check <- job_data %>% distinct()
check <- job_data %>% select(companyName, company_offeredRole, company_salary) %>% distinct()
View(check)
job_data %>% filter(companyName == "Kum & Go")
check1 <- job_data %>% filter(companyName == "Kum & Go")
View(check1)
check1$requested_url
check1 %>% select(listing_jobDesc) %>% distinct()
check2 <- check1 %>% select(listing_jobDesc) %>% distinct()
colnames(job_data)
### Need to clean salary
job_data %>%
select(-requested_url)
### Need to clean salary
job_data <- job_data %>%
select(-requested_url)
salary_data <- job_data %>%
filter(!is.na(company_salary))
for (i in 1:nrow(salary_data)) {
temp <- str_extract_all(salary_data$company_salary[i], "[0-9]+")[[1]]
if (length(temp) == 2) {
salary_temp <- mean(as.numeric(temp))
} else {
salary_temp <- as.numeric(temp)
}
salary_data$salary[i] <- salary_temp
}
write.csv(salary_data, "salary.csv")
View(salary_data)
role <- c("Data Scientist", "Data Analytics", "Applied Scientist",
"Data Engineer", "Software Engineer", "Data Integration",
"Machine Learning", "Systems Engineer", "Business Analytics",
"Statistician", "Data Science", "Data Analyst")
role_change <- c("Data Scientist", "Data Analyst", "Machine Learning",
"Data Engineer", "Others", "Others",
"Machine Learning", "Others", "Data Analyst",
"Data Scientist", "Data Scientist", "Data Analyst")
for (i in 1:nrow(salary_data)) {
temp <- salary_data$company_offeredRole[i]
role_temp <- role_change[str_detect(temp, role)]
salary_data$role[i] <- role_temp
}
i
salary_data$company_offeredRole[i]
role <- c("Data Scientist", "Data Analytics", "Applied Scientist",
"Data Engineer", "Software Engineer", "Data Integration",
"Machine Learning", "Systems Engineer", "Business Analytics",
"Statistician", "Data Science", "Data Analyst",
"System Technician")
role_change <- c("Data Scientist", "Data Analyst", "Machine Learning",
"Data Engineer", "Others", "Others",
"Machine Learning", "Others", "Data Analyst",
"Data Scientist", "Data Scientist", "Data Analyst",
"Others")
for (i in 1:nrow(salary_data)) {
temp <- salary_data$company_offeredRole[i]
role_temp <- role_change[str_detect(temp, role)]
salary_data$role[i] <- role_temp
}
i
salary_data$company_offeredRole[i]
role <- c("Data Scientist", "Data Analytics", "Applied Scientist",
"Data Engineer", "Software Engineer", "Data Integration",
"Machine Learning", "Systems Engineer", "Business Analytics",
"Statistician", "Data Science", "Data Analyst",
"System Technician", "Artificial Intelligence")
role_change <- c("Data Scientist", "Data Analyst", "Machine Learning",
"Data Engineer", "Others", "Others",
"Machine Learning", "Others", "Data Analyst",
"Data Scientist", "Data Scientist", "Data Analyst",
"Others", "Machine Learning")
for (i in 1:nrow(salary_data)) {
temp <- salary_data$company_offeredRole[i]
role_temp <- role_change[str_detect(temp, role)]
salary_data$role[i] <- role_temp
}
i
salary_data$company_offeredRole[i]
role <- c("Data Scientist", "Data Analytics", "Applied Scientist",
"Data Engineer", "Software Engineer", "Data Integration",
"Machine Learning", "Systems Engineer", "Business Analytics",
"Statistician", "Data Science", "Data Analyst",
"System Technician", "Artificial Intelligence", "Decision Scientist")
role_change <- c("Data Scientist", "Data Analyst", "Machine Learning",
"Data Engineer", "Others", "Others",
"Machine Learning", "Others", "Data Analyst",
"Data Scientist", "Data Scientist", "Data Analyst",
"Others", "Machine Learning", "Data Scientist")
for (i in 1:nrow(salary_data)) {
temp <- salary_data$company_offeredRole[i]
role_temp <- role_change[str_detect(temp, role)]
salary_data$role[i] <- role_temp
}
i
salary_data$company_offeredRole[i]
role <- c("Data Scientist", "Data Analytics", "Applied Scientist",
"Data Engineer", "Software Engineer", "Data Integration",
"Machine Learning", "Systems Engineer", "Business Analytics",
"Statistician", "Data Science", "Data Analyst",
"System Technician", "Artificial Intelligence", "Decision Scientist",
"Natural Language Processing")
role_change <- c("Data Scientist", "Data Analyst", "Machine Learning",
"Data Engineer", "Others", "Others",
"Machine Learning", "Others", "Data Analyst",
"Data Scientist", "Data Scientist", "Data Analyst",
"Others", "Machine Learning", "Data Scientist",
"Machine Learning")
for (i in 1:nrow(salary_data)) {
temp <- salary_data$company_offeredRole[i]
role_temp <- role_change[str_detect(temp, role)]
salary_data$role[i] <- role_temp
}
i
salary_data$company_offeredRole[i]
for (i in 1:nrow(salary_data)) {
temp <- salary_data$company_offeredRole[i]
role_temp <- role_change[str_detect(temp, role)]
salary_data$role[i] <- role_temp
}
i
salary_data$company_offeredRole[i]
role <- c("Data Scientist", "Data Analytics", "Applied Scientist",
"Data Engineer", "Software Engineer", "Data Integration",
"Machine Learning", "Systems Engineer", "Business Analytics",
"Statistician", "Data Science", "Data Analyst",
"System Technician", "Artificial Intelligence", "Decision Scientist",
"Natural Language Processing", "Data Architect")
role_change <- c("Data Scientist", "Data Analyst", "Machine Learning",
"Data Engineer", "Others", "Others",
"Machine Learning", "Others", "Data Analyst",
"Data Scientist", "Data Scientist", "Data Analyst",
"Others", "Machine Learning", "Data Scientist",
"Machine Learning", "Data Engineer")
for (i in 1:nrow(salary_data)) {
temp <- salary_data$company_offeredRole[i]
role_temp <- role_change[str_detect(temp, role)]
salary_data$role[i] <- role_temp
}
salary_data$company_offeredRole[i]
role <- c("Data Scientist", "Data Analytics", "Applied Scientist",
"Data Engineer", "Software Engineer", "Data Integration",
"Machine Learning", "Systems Engineer", "Business Analytics",
"Statistician", "Data Science", "Data Analyst",
"System Technician", "Artificial Intelligence", "Decision Scientist",
"Natural Language Processing", "Data Architect", "Modeling")
role_change <- c("Data Scientist", "Data Analyst", "Machine Learning",
"Data Engineer", "Others", "Others",
"Machine Learning", "Others", "Data Analyst",
"Data Scientist", "Data Scientist", "Data Analyst",
"Others", "Machine Learning", "Data Scientist",
"Machine Learning", "Data Engineer", "Data Scientist")
for (i in 1:nrow(salary_data)) {
temp <- salary_data$company_offeredRole[i]
role_temp <- role_change[str_detect(temp, role)]
salary_data$role[i] <- role_temp
}
salary_data$company_offeredRole[i]
role <- c("Data Scientist", "Data Analytics", "Applied Scientist",
"Data Engineer", "Software Engineer", "Data Integration",
"Machine Learning", "Systems Engineer", "Business Analytics",
"Statistician", "Data Science", "Data Analyst",
"System Technician", "Artificial Intelligence", "Decision Scientist",
"Natural Language Processing", "Data Architect", "Modeling",
"Data Review")
role_change <- c("Data Scientist", "Data Analyst", "Machine Learning",
"Data Engineer", "Others", "Others",
"Machine Learning", "Others", "Data Analyst",
"Data Scientist", "Data Scientist", "Data Analyst",
"Others", "Machine Learning", "Data Scientist",
"Machine Learning", "Data Engineer", "Data Scientist",
"Data Analyst")
for (i in 1:nrow(salary_data)) {
temp <- salary_data$company_offeredRole[i]
role_temp <- role_change[str_detect(temp, role)]
salary_data$role[i] <- role_temp
}
i
table(salary_data$role)
for (i in 1:nrow(salary_data)) {
temp <- salary_data$company_roleLocation[i]
num <- nchar(temp)
if (temp == "Remote") {
salary_data$location[i] <- "Remote"
} else {
salary_data$location[i] <- substr(temp, num-1, num)
}
}
table(salary_data$location)
salary_data <- salary_data %>%
mutate(R = ifelse(str_detect(listing_jobDesc, "R"), 1, 0),
Python = ifelse(str_detect(listing_jobDesc, "Python"), 1, 0),
SQL = ifelse(str_detect(listing_jobDesc, "SQL"), 1, 0))
sum(salary_data$R)/nrow(check)
sum(salary_data$Python)/nrow(check)
sum(salary_data$SQL)/nrow(check)
salary_data
sum(salary_data$R)/nrow(salary_data)
sum(salary_data$Python)/nrow(salary_data)
sum(salary_data$SQL)/nrow(salary_data)
write.csv(salary_data, "salary.csv")
library(tidyverse)
setwd("/Users/tixradmin/Documents/GitHub/mas418_final_project/Glassdoor/output")
job_data <- read.csv("output_.csv")
setwd("/Users/tixradmin/Documents/GitHub/mas418_final_project/Glassdoor/Clean_R_Danny")
View(job_data)
### Get rid of duplicates
job_data
### Get rid of duplicates
job_data %>%
select(-requested_url) %>%
distinct()
library(tidyverse)
setwd("/Users/tixradmin/Documents/GitHub/mas418_final_project/Glassdoor/output")
job_data <- read.csv("output_.csv")
setwd("/Users/tixradmin/Documents/GitHub/mas418_final_project/Glassdoor/Clean_R_Danny")
### Get rid of duplicates
check <- job_data %>%
select(-requested_url) %>%
distinct()
View(check)
View(job_data)
check2 <- job_data %>%
arrange(company)
check2 <- job_data %>%
arrange(companyName)
View(check2)
i = 1
job_data[i,]
rbind(job_no_dup, job_data[1,])
job_no_dup <- data.frame()
rbind(job_no_dup, job_data[1,])
job_no_dup <- rbind(job_no_dup, job_data[1,])
View(job_no_dup)
rbind(job_no_dup, temp) %>%
select(-requested_url)
temp <- job_data[i,]
rbind(job_no_dup, temp) %>%
select(-requested_url)
check <- rbind(job_no_dup, temp) %>%
select(-requested_url)
View(check)
check <- rbind(job_no_dup, temp) %>%
select(-requested_url) %>%
group_by(companyName, company_offeredRole, company_roleLocation, company_salary) %>%
summarise(count = n())
View(check)
job_no_dup <- data.frame()
job_no_dup <- rbind(job_no_dup, job_data[1,])
for (i in 1:nrow(job_data)) {
temp <- job_data[i,]
check <- rbind(job_no_dup, temp) %>%
select(-requested_url) %>%
group_by(companyName, company_offeredRole, company_roleLocation, company_salary) %>%
summarise(count = n())
if (mean(check) == 1) {
job_no_dup <- rbind(job_no_dup, job_data[i,])
}
}
for (i in 1:nrow(job_data)) {
temp <- job_data[i,]
check <- rbind(job_no_dup, temp) %>%
select(-requested_url) %>%
group_by(companyName, company_offeredRole, company_roleLocation, company_salary) %>%
summarise(count = n())
if (mean(check$count) == 1) {
job_no_dup <- rbind(job_no_dup, job_data[i,])
}
}
View(job_no_dup)
library(tidyverse)
### Input file
setwd("/Users/tixradmin/Documents/GitHub/mas418_final_project/Glassdoor/output")
job_data <- read.csv("output_.csv")
### Cleaning
job_no_dup <- data.frame()
job_no_dup <- rbind(job_no_dup, job_data[1,])
for (i in 1:nrow(job_data)) {
temp <- job_data[i,]
check <- rbind(job_no_dup, temp) %>%
select(-requested_url) %>%
group_by(companyName, company_offeredRole, company_roleLocation, company_salary) %>%
summarise(count = n())
if (mean(check$count) == 1) {
job_no_dup <- rbind(job_no_dup, job_data[i,])
}
}
### Output file
write.csv(job_no_dup, "salary_no_dup.csv")
setwd("/Users/tixradmin/Documents/GitHub/mas418_final_project/Glassdoor/Clean_R_Danny")
write.csv(job_no_dup, "salary_no_dup.csv")
setwd("/Users/tixradmin/Documents/GitHub/mas418_final_project/Danny/Clean_R_Danny")
job_data <- read.csv("salary_no_dup.csv")
library(tidyverse)
job_data <- read.csv("salary_no_dup.csv")
salary_data <- job_data %>%
filter(!is.na(company_salary))
for (i in 1:nrow(salary_data)) {
temp <- str_extract_all(salary_data$company_salary[i], "[0-9]+")[[1]]
if (length(temp) == 2) {
salary_temp <- mean(as.numeric(temp))
} else {
salary_temp <- as.numeric(temp)
}
salary_data$salary[i] <- salary_temp
}
role <- c("Data Scientist", "Data Analytics", "Applied Scientist",
"Data Engineer", "Software Engineer", "Data Integration",
"Machine Learning", "Systems Engineer", "Business Analytics",
"Statistician", "Data Science", "Data Analyst",
"System Technician", "Artificial Intelligence", "Decision Scientist",
"Natural Language Processing", "Data Architect", "Modeling",
"Data Review")
role_change <- c("Data Scientist", "Data Analyst", "Machine Learning",
"Data Engineer", "Others", "Others",
"Machine Learning", "Others", "Data Analyst",
"Data Scientist", "Data Scientist", "Data Analyst",
"Others", "Machine Learning", "Data Scientist",
"Machine Learning", "Data Engineer", "Data Scientist",
"Data Analyst")
for (i in 1:nrow(salary_data)) {
temp <- salary_data$company_offeredRole[i]
role_temp <- role_change[str_detect(temp, role)]
salary_data$role[i] <- role_temp
}
i
salary_data$company_offeredRole[i]
role <- c("Data Scientist", "Data Analytics", "Applied Scientist",
"Data Engineer", "Software Engineer", "Data Integration",
"Machine Learning", "Systems Engineer", "Business Analytics",
"Statistician", "Data Science", "Data Analyst",
"System Technician", "Artificial Intelligence", "Decision Scientist",
"Natural Language Processing", "Data Architect", "Modeling",
"Data Review", "Reporting Analyst")
role_change <- c("Data Scientist", "Data Analyst", "Machine Learning",
"Data Engineer", "Others", "Others",
"Machine Learning", "Others", "Data Analyst",
"Data Scientist", "Data Scientist", "Data Analyst",
"Others", "Machine Learning", "Data Scientist",
"Machine Learning", "Data Engineer", "Data Scientist",
"Data Analyst", "Data Analyst")
for (i in 1:nrow(salary_data)) {
temp <- salary_data$company_offeredRole[i]
role_temp <- role_change[str_detect(temp, role)]
salary_data$role[i] <- role_temp
}
table(salary_data$role)
### Next location
for (i in 1:nrow(salary_data)) {
temp <- salary_data$company_roleLocation[i]
num <- nchar(temp)
if (temp == "Remote") {
salary_data$location[i] <- "Remote"
} else {
salary_data$location[i] <- substr(temp, num-1, num)
}
}
table(salary_data$location)
salary_data$listing_jobDesc[1]
check <- salary_data$listing_jobDesc[1]
str_detect(check, "R")
str_detect(check, " R")
str_detect(check, " R ")
### Also Skills
salary_data <- salary_data %>%
mutate(#R = ifelse(str_detect(listing_jobDesc, "R"), 1, 0),
Python = ifelse(str_detect(listing_jobDesc, "Python"), 1, 0),
SQL = ifelse(str_detect(listing_jobDesc, "SQL"), 1, 0))
#sum(salary_data$R)/nrow(salary_data)
sum(salary_data$Python)/nrow(salary_data)
sum(salary_data$SQL)/nrow(salary_data)
write.csv(salary_data, "salary.csv")
library(tidyverse)
### Input file
setwd("/Users/tixradmin/Documents/GitHub/mas418_final_project/Glassdoor/output")
job_data <- read.csv("output_.csv")
View(job_data)
### Cleaning
job_no_dup <- data.frame()
job_no_dup <- rbind(job_no_dup, job_data[1,])
job_no_dup
View(job_no_dup)
i = 1
temp <- job_data[i,]
View(temp)
check <- rbind(job_no_dup, temp)
View(check)
check <- rbind(job_no_dup, temp) %>%
select(-requested_url) %>%
group_by(companyName, company_offeredRole, company_roleLocation, company_salary) %>%
summarise(count = n())
mean(check$count) == 1
i = 2
temp <- job_data[i,]
check <- rbind(job_no_dup, temp) %>%
select(-requested_url) %>%
group_by(companyName, company_offeredRole, company_roleLocation, company_salary) %>%
summarise(count = n())
mean(check$count) == 1
job_no_dup <- rbind(job_no_dup, job_data[i,])
