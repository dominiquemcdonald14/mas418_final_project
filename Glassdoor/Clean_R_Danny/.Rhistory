select(`Customer Name`, `Customer Email`, seatLabels_draft)
## Combine everything
admission <- rbind(admission_4_pack, admission_military,
admission_general, admission_reserved) %>%
ungroup() %>%
group_by(`Customer Name`,`Customer Email`) %>%
summarise(seatLabels = paste(seatLabels_draft, collapse = ","))
write_clip(admission)
## Case 1: Coyote Crossing (271 cases)
### Case 1.1: Normal (265 cases)
camping_coyote_norm <- reserve_rsvp %>%
filter(str_detect(`Price Code`, "Camping")) %>%
filter(Section == "CoyoteCrossing") %>%
filter(!str_detect(Row, "ADA")) %>%
mutate(part1 = "COYOTE_CROSSING-ROW_",
part2 = substr(Row,1,2),
part3 = Seat) %>%
mutate(seatLabels_draft = paste0(part1, part2, "-", part3)) %>%
mutate(seatLabels_draft = str_replace_all(seatLabels_draft, "_", " ")) %>%
select(`Customer Name`, `Customer Email`, seatLabels_draft)
### Case 1.2: VIP ADA (6 cases)
camping_coyote_vip_ada <- reserve_rsvp %>%
filter(str_detect(`Price Code`, "Camping")) %>%
filter(Section == "CoyoteCrossing") %>%
filter(str_detect(Row, "ADA")) %>%
mutate(part1 = "VIP_ADA-ADA_VIP",
part2 = Seat) %>%
mutate(seatLabels_draft = paste0(part1, "-", part2)) %>%
mutate(seatLabels_draft = str_replace_all(seatLabels_draft, "_", " ")) %>%
select(`Customer Name`, `Customer Email`, seatLabels_draft)
## Case 2: Eagle Ridge (35 cases)
camping_eagle <- reserve_rsvp %>%
filter(str_detect(`Price Code`, "Camping")) %>%
filter(Section == "EagleRidge") %>%
mutate(part1 = "EAGLE_RIDGE-ROW_",
part2 = substr(Row,1,2),
part3 = Seat) %>%
mutate(seatLabels_draft = paste0(part1, part2, "-", part3)) %>%
mutate(seatLabels_draft = str_replace_all(seatLabels_draft, "_", " ")) %>%
select(`Customer Name`, `Customer Email`, seatLabels_draft)
## Case 3: Quails Nest (770 cases)
### Case 3.1: Normal (763 cases)
camping_quails_norm <- reserve_rsvp %>%
filter(str_detect(`Price Code`, "Camping")) %>%
filter(Section == "QuailsNest") %>%
filter(!str_detect(Row, "ADA")) %>%
mutate(part1 = "QUAILS_NEST-ROW_",
part2 = str_extract(Row,"[0-9]+"),
part3 = Seat) %>%
mutate(seatLabels_draft = paste0(part1, part2, "-", part3)) %>%
mutate(seatLabels_draft = str_replace_all(seatLabels_draft, "_", " ")) %>%
select(`Customer Name`, `Customer Email`, seatLabels_draft)
### Case 4.2: VIP ADA (7 cases)
camping_quails_ga_ada <- reserve_rsvp %>%
filter(str_detect(`Price Code`, "Camping")) %>%
filter(Section == "QuailsNest") %>%
filter(str_detect(Row, "ADA")) %>%
mutate(part1 = "GA_ADA-ADA_",
part2 = str_extract(Row,"[0-9]+"),
part3 = Seat) %>%
mutate(seatLabels_draft = paste0(part1, part2, "-", part3)) %>%
mutate(seatLabels_draft = str_replace_all(seatLabels_draft, "_", " ")) %>%
select(`Customer Name`, `Customer Email`, seatLabels_draft)
## Case 5: White Tail Run (275 cases)
camping_white <- reserve_rsvp %>%
filter(str_detect(`Price Code`, "Camping")) %>%
filter(Section == "WhiteTailRun") %>%
mutate(part1 = "WHITE_TAIL_RUN-ROW_",
part2 = str_extract(Row,"[0-9]+"),
part3 = Seat) %>%
mutate(seatLabels_draft = paste0(part1, part2, "-", part3)) %>%
mutate(seatLabels_draft = str_replace_all(seatLabels_draft, "_", " ")) %>%
select(`Customer Name`, `Customer Email`, seatLabels_draft)
## Combine
camping <- rbind(camping_coyote_norm,
camping_coyote_vip_ada,
camping_eagle,
camping_quails_norm,
camping_quails_ga_ada,
camping_white) %>%
ungroup() %>%
group_by(`Customer Name`,`Customer Email`) %>%
summarise(seatLabels = paste(seatLabels_draft, collapse = ","))
## Case 1: Glamping (22 cases)
## Case 1.1: Headliner 2 person (13 cases)
camping_glamping_head_2 <- reserve_rsvp %>%
filter(Section == "Headliner Glamping 2 Person") %>%
group_by(`Customer Name`,`Customer Email`) %>%
summarise(count = sum(Quantity)) %>%
mutate(seatLabels_draft = ifelse(count == 1, "GLAMPING HEADLINER 2 PERSON", paste0("GLAMPING HEADLINER 2 PERSON[[Q:",count,"]]"))) %>%
select(`Customer Name`, `Customer Email`, seatLabels_draft)
## Case 1.2: Headliner 4 person (5 cases)
camping_glamping_head_4 <- reserve_rsvp %>%
filter(Section == "Headliner Glamping 4 Person") %>%
group_by(`Customer Name`,`Customer Email`) %>%
summarise(count = sum(Quantity)) %>%
mutate(seatLabels_draft = ifelse(count == 1, "GLAMPING HEADLINER 4 PERSON", paste0("GLAMPING HEADLINER 4 PERSON[[Q:",count,"]]"))) %>%
select(`Customer Name`, `Customer Email`, seatLabels_draft)
## Case 1.3: Opening Act (4 cases)
camping_glamping_opening <- reserve_rsvp %>%
filter(Section == "Opening Act Glamping") %>%
group_by(`Customer Name`,`Customer Email`) %>%
summarise(count = sum(Quantity)) %>%
mutate(seatLabels_draft = ifelse(count == 1, "GLAMPING OPENING ACT", paste0("GLAMPING OPENING ACT[[Q:",count,"]]"))) %>%
select(`Customer Name`, `Customer Email`, seatLabels_draft)
## Case 2: Homestead (2 cases)
## Case 2.1: Homestead Porch
homestead_porch <- reserve_rsvp %>%
filter(Section == "Homestead Porch") %>%
group_by(`Customer Name`,`Customer Email`) %>%
summarise(count = sum(Quantity)) %>%
mutate(seatLabels_draft = ifelse(count == 1, "Homestead Front Lawn (Individual Pass)", paste0("Homestead Front Lawn (Individual Pass)[[Q:",count,"]]"))) %>%
select(`Customer Name`, `Customer Email`, seatLabels_draft)
## Case 2.2: Homestead Balcony
homestead_balcony <- reserve_rsvp %>%
filter(Section == "The High Life") %>%
group_by(`Customer Name`,`Customer Email`) %>%
summarise(count = sum(Quantity)) %>%
mutate(seatLabels_draft = ifelse(count == 1, "Homestead Balcony (Four-Pass Package)", paste0("Homestead Balcony (Four-Pass Package)[[Q:",count,"]]"))) %>%
select(`Customer Name`, `Customer Email`, seatLabels_draft)
## Case 3: Stables (6 cases)
stables <- reserve_rsvp %>%
filter(Section == "The Stables") %>%
group_by(`Customer Name`,`Customer Email`) %>%
summarise(count = sum(Quantity)) %>%
mutate(seatLabels_draft = ifelse(count == 1, "STABLES PACKAGES (6 person package)", paste0("STABLES PACKAGES (6 person package)[[Q:",count,"]]"))) %>%
select(`Customer Name`, `Customer Email`, seatLabels_draft)
## Combine Everything
others <- rbind(camping_glamping_head_2, camping_glamping_head_4, camping_glamping_opening,
homestead_porch, homestead_balcony, stables) %>%
ungroup() %>%
group_by(`Customer Name`,`Customer Email`) %>%
summarise(seatLabels = paste(seatLabels_draft, collapse = ","))
---
title: "Born & Raised"
result <- rbind(admission,
camping,
others) %>%
ungroup() %>%
group_by(`Customer Name`,`Customer Email`) %>%
summarise(seatLabels = paste(seatLabels, collapse = ","))
result %>%
filter(`Customer Email` %in% c("abb2463@yahoo.com", "ryanhclayton247@gmail.com"))
B_R <- read_excel("B_R.xlsx")
BR_data <- B_R %>%
filter(!`Price Code` %in% c("FOH Wristband Replacement", "Investor Comp", "Marketing Comp",
"RAE Corp General Admission 4-Pack Tier 1", "RAE Corp General Admission 4-Pack Tier 2",
"RAE Corp Weekend VIP Tier 2", "Sponsor Comp"))
empties <- BR_data %>%
filter(is.na(`Customer Name`) | is.na(`Customer Email`))
BR_new <- BR_data %>%
filter(!(is.na(`Customer Name`) | is.na(`Customer Email`)))
length(unique(tolower(BR_new$`Customer Email`)))
length(unique(BR_new$`Customer Email`))
write_clip(empties)
reserve_rsvp <- BR_new
BR_new %>%
filter(`Customer Email` %in% c("ryanhclayton247@gmail.com"))
BR_data <- B_R %>%
filter(!`Price Code` %in% c("FOH Wristband Replacement", "Investor Comp", "Marketing Comp",
"RAE Corp General Admission 4-Pack Tier 1", "RAE Corp General Admission 4-Pack Tier 2",
"RAE Corp Weekend VIP Tier 2", "Sponsor Comp"))
empties <- BR_data %>%
filter(is.na(`Customer Name`) | is.na(`Customer Email`))
BR_new <- BR_data %>%
filter(!(is.na(`Customer Name`) | is.na(`Customer Email`)))
length(unique(tolower(BR_new$`Customer Email`)))
length(unique(BR_new$`Customer Email`))
write_clip(empties)
reserve_rsvp <- BR_new
BR_new %>%
filter(`Customer Email` %in% c("ryanhclayton247@gmail.com"))
## Case 1: Military (122 cases, 119 distinct)
admission_military <- reserve_rsvp %>%
filter(Section == "General Admission") %>%
filter(str_detect(`Price Code`, "Military")) %>%
group_by(`Customer Name`,`Customer Email`) %>%
summarise(count = sum(Quantity)) %>%
mutate(seatLabels_draft = ifelse(count == 1, "General Admission Military", paste0("General Admission Military[[Q:",count,"]]"))) %>%
select(`Customer Name`, `Customer Email`, seatLabels_draft)
## Case 2: 4-Pack (546 cases, 543 distinct)
admission_4_pack <- reserve_rsvp %>%
filter(Section == "General Admission") %>%
filter(str_detect(`Price Code`, "4-Pack")) %>%
group_by(`Customer Name`,`Customer Email`) %>%
summarise(count = sum(Quantity)/4) %>%
mutate(seatLabels_draft = ifelse(count == 1, "General Admission 4-Pack", paste0("General Admission 4-Pack[[Q:",count,"]]"))) %>%
select(`Customer Name`, `Customer Email`, seatLabels_draft)
## Case 3: General Admission (2318 cases, 2224 distinct)
admission_general <- reserve_rsvp %>%
filter(Section == "General Admission") %>%
filter(!(str_detect(`Price Code`, "4-Pack") |
str_detect(`Price Code`, "Military"))) %>%
group_by(`Customer Name`,`Customer Email`) %>%
summarise(count = sum(Quantity)) %>%
mutate(seatLabels_draft = ifelse(count == 1, "General Admission", paste0("General Admission[[Q:",count,"]]"))) %>%
select(`Customer Name`, `Customer Email`, seatLabels_draft)
## Case 4: Weekend Reserved Normal (1201 cases)
admission_reserved <- reserve_rsvp %>%
filter(str_detect(`Price Code`, "Weekend Reserved") | str_detect(`Price Code`, "Weekend VIP")
| str_detect(`Price Code`, "Troubadour")) %>%
mutate(part1 = "SECTION_",
part2 = Section,
part3 = Row,
part4 = Seat) %>%
mutate(seatLabels_draft = paste0(part1, part2, "-", part3, "-", part4)) %>%
mutate(seatLabels_draft = str_replace_all(seatLabels_draft, "_", " ")) %>%
select(`Customer Name`, `Customer Email`, seatLabels_draft)
## Combine everything
admission <- rbind(admission_4_pack, admission_military,
admission_general, admission_reserved) %>%
ungroup() %>%
group_by(`Customer Name`,`Customer Email`) %>%
summarise(seatLabels = paste(seatLabels_draft, collapse = ","))
write_clip(admission)
## Case 1: Coyote Crossing (271 cases)
### Case 1.1: Normal (265 cases)
camping_coyote_norm <- reserve_rsvp %>%
filter(str_detect(`Price Code`, "Camping")) %>%
filter(Section == "CoyoteCrossing") %>%
filter(!str_detect(Row, "ADA")) %>%
mutate(part1 = "COYOTE_CROSSING-ROW_",
part2 = substr(Row,1,2),
part3 = Seat) %>%
mutate(seatLabels_draft = paste0(part1, part2, "-", part3)) %>%
mutate(seatLabels_draft = str_replace_all(seatLabels_draft, "_", " ")) %>%
select(`Customer Name`, `Customer Email`, seatLabels_draft)
### Case 1.2: VIP ADA (6 cases)
camping_coyote_vip_ada <- reserve_rsvp %>%
filter(str_detect(`Price Code`, "Camping")) %>%
filter(Section == "CoyoteCrossing") %>%
filter(str_detect(Row, "ADA")) %>%
mutate(part1 = "VIP_ADA-ADA_VIP",
part2 = Seat) %>%
mutate(seatLabels_draft = paste0(part1, "-", part2)) %>%
mutate(seatLabels_draft = str_replace_all(seatLabels_draft, "_", " ")) %>%
select(`Customer Name`, `Customer Email`, seatLabels_draft)
## Case 2: Eagle Ridge (35 cases)
camping_eagle <- reserve_rsvp %>%
filter(str_detect(`Price Code`, "Camping")) %>%
filter(Section == "EagleRidge") %>%
mutate(part1 = "EAGLE_RIDGE-ROW_",
part2 = substr(Row,1,2),
part3 = Seat) %>%
mutate(seatLabels_draft = paste0(part1, part2, "-", part3)) %>%
mutate(seatLabels_draft = str_replace_all(seatLabels_draft, "_", " ")) %>%
select(`Customer Name`, `Customer Email`, seatLabels_draft)
## Case 3: Quails Nest (770 cases)
### Case 3.1: Normal (763 cases)
camping_quails_norm <- reserve_rsvp %>%
filter(str_detect(`Price Code`, "Camping")) %>%
filter(Section == "QuailsNest") %>%
filter(!str_detect(Row, "ADA")) %>%
mutate(part1 = "QUAILS_NEST-ROW_",
part2 = str_extract(Row,"[0-9]+"),
part3 = Seat) %>%
mutate(seatLabels_draft = paste0(part1, part2, "-", part3)) %>%
mutate(seatLabels_draft = str_replace_all(seatLabels_draft, "_", " ")) %>%
select(`Customer Name`, `Customer Email`, seatLabels_draft)
### Case 4.2: VIP ADA (7 cases)
camping_quails_ga_ada <- reserve_rsvp %>%
filter(str_detect(`Price Code`, "Camping")) %>%
filter(Section == "QuailsNest") %>%
filter(str_detect(Row, "ADA")) %>%
mutate(part1 = "GA_ADA-ADA_",
part2 = str_extract(Row,"[0-9]+"),
part3 = Seat) %>%
mutate(seatLabels_draft = paste0(part1, part2, "-", part3)) %>%
mutate(seatLabels_draft = str_replace_all(seatLabels_draft, "_", " ")) %>%
select(`Customer Name`, `Customer Email`, seatLabels_draft)
## Case 5: White Tail Run (275 cases)
camping_white <- reserve_rsvp %>%
filter(str_detect(`Price Code`, "Camping")) %>%
filter(Section == "WhiteTailRun") %>%
mutate(part1 = "WHITE_TAIL_RUN-ROW_",
part2 = str_extract(Row,"[0-9]+"),
part3 = Seat) %>%
mutate(seatLabels_draft = paste0(part1, part2, "-", part3)) %>%
mutate(seatLabels_draft = str_replace_all(seatLabels_draft, "_", " ")) %>%
select(`Customer Name`, `Customer Email`, seatLabels_draft)
## Combine
camping <- rbind(camping_coyote_norm,
camping_coyote_vip_ada,
camping_eagle,
camping_quails_norm,
camping_quails_ga_ada,
camping_white) %>%
ungroup() %>%
group_by(`Customer Name`,`Customer Email`) %>%
summarise(seatLabels = paste(seatLabels_draft, collapse = ","))
## Case 1: Glamping (22 cases)
## Case 1.1: Headliner 2 person (13 cases)
camping_glamping_head_2 <- reserve_rsvp %>%
filter(Section == "Headliner Glamping 2 Person") %>%
group_by(`Customer Name`,`Customer Email`) %>%
summarise(count = sum(Quantity)) %>%
mutate(seatLabels_draft = ifelse(count == 1, "GLAMPING HEADLINER 2 PERSON", paste0("GLAMPING HEADLINER 2 PERSON[[Q:",count,"]]"))) %>%
select(`Customer Name`, `Customer Email`, seatLabels_draft)
## Case 1.2: Headliner 4 person (5 cases)
camping_glamping_head_4 <- reserve_rsvp %>%
filter(Section == "Headliner Glamping 4 Person") %>%
group_by(`Customer Name`,`Customer Email`) %>%
summarise(count = sum(Quantity)) %>%
mutate(seatLabels_draft = ifelse(count == 1, "GLAMPING HEADLINER 4 PERSON", paste0("GLAMPING HEADLINER 4 PERSON[[Q:",count,"]]"))) %>%
select(`Customer Name`, `Customer Email`, seatLabels_draft)
## Case 1.3: Opening Act (4 cases)
camping_glamping_opening <- reserve_rsvp %>%
filter(Section == "Opening Act Glamping") %>%
group_by(`Customer Name`,`Customer Email`) %>%
summarise(count = sum(Quantity)) %>%
mutate(seatLabels_draft = ifelse(count == 1, "GLAMPING OPENING ACT", paste0("GLAMPING OPENING ACT[[Q:",count,"]]"))) %>%
select(`Customer Name`, `Customer Email`, seatLabels_draft)
## Case 2: Homestead (2 cases)
## Case 2.1: Homestead Porch
homestead_porch <- reserve_rsvp %>%
filter(Section == "Homestead Porch") %>%
group_by(`Customer Name`,`Customer Email`) %>%
summarise(count = sum(Quantity)) %>%
mutate(seatLabels_draft = ifelse(count == 1, "Homestead Front Lawn (Individual Pass)", paste0("Homestead Front Lawn (Individual Pass)[[Q:",count,"]]"))) %>%
select(`Customer Name`, `Customer Email`, seatLabels_draft)
## Case 2.2: Homestead Balcony
homestead_balcony <- reserve_rsvp %>%
filter(Section == "The High Life") %>%
group_by(`Customer Name`,`Customer Email`) %>%
summarise(count = sum(Quantity)) %>%
mutate(seatLabels_draft = ifelse(count == 1, "Homestead Balcony (Four-Pass Package)", paste0("Homestead Balcony (Four-Pass Package)[[Q:",count,"]]"))) %>%
select(`Customer Name`, `Customer Email`, seatLabels_draft)
## Case 3: Stables (6 cases)
stables <- reserve_rsvp %>%
filter(Section == "The Stables") %>%
group_by(`Customer Name`,`Customer Email`) %>%
summarise(count = sum(Quantity)) %>%
mutate(seatLabels_draft = ifelse(count == 1, "STABLES PACKAGES (6 person package)", paste0("STABLES PACKAGES (6 person package)[[Q:",count,"]]"))) %>%
select(`Customer Name`, `Customer Email`, seatLabels_draft)
## Combine Everything
others <- rbind(camping_glamping_head_2, camping_glamping_head_4, camping_glamping_opening,
homestead_porch, homestead_balcony, stables) %>%
ungroup() %>%
group_by(`Customer Name`,`Customer Email`) %>%
summarise(seatLabels = paste(seatLabels_draft, collapse = ","))
result <- rbind(admission,
camping,
others) %>%
ungroup() %>%
group_by(`Customer Name`,`Customer Email`) %>%
summarise(seatLabels = paste(seatLabels, collapse = ","))
length(unique(result$`Customer Email`))
nrow(result)
final_result <- result %>%
mutate(firstName = str_split(`Customer Name`, " ")[[1]][1],
lastName = str_split(`Customer Name`, " ")[[1]][2],
email = `Customer Email`) %>%
ungroup() %>%
select(firstName, lastName, email, seatLabels)
final_result
### We want two lists, one for OK Corral and one without
OK <- c("SECTION A-19-13","SECTION A-19-14","SECTION A-19-15","SECTION A-19-16","SECTION A-19-17","SECTION A-19-18","SECTION A-21-13","SECTION A-21-14","SECTION A-21-15","SECTION A-21-16","SECTION A-21-17","SECTION A-21-18","SECTION A-23-13","SECTION A-23-14","SECTION A-23-15","SECTION A-23-16","SECTION A-23-17","SECTION A-23-18","SECTION A-25-13","SECTION A-25-14","SECTION A-25-15","SECTION A-25-16","SECTION A-25-17","SECTION A-25-18","SECTION A-27-13","SECTION A-27-14","SECTION A-27-15","SECTION A-27-16","SECTION A-27-17","SECTION A-27-18","SECTION A-29-13","SECTION A-29-14","SECTION A-29-15","SECTION A-29-16","SECTION A-29-17","SECTION A-29-18","SECTION A-31-13","SECTION A-31-14","SECTION A-31-15","SECTION A-31-16","SECTION A-31-17","SECTION A-31-18","SECTION A-33-13","SECTION A-33-14","SECTION A-33-15","SECTION A-33-16","SECTION A-33-17","SECTION A-33-18","SECTION A-32-1","SECTION A-32-2","SECTION A-32-3","SECTION A-32-4","SECTION A-32-5","SECTION A-32-6","SECTION A-30-1","SECTION A-30-2","SECTION A-30-3","SECTION A-30-4","SECTION A-30-5","SECTION A-30-6","SECTION A-28-1","SECTION A-28-2","SECTION A-28-3","SECTION A-28-4","SECTION A-28-5","SECTION A-28-6","SECTION A-26-1","SECTION A-26-2","SECTION A-26-3","SECTION A-26-4","SECTION A-26-5","SECTION A-26-6","SECTION A-24-1","SECTION A-24-2","SECTION A-24-3","SECTION A-24-4","SECTION A-24-5","SECTION A-24-6","SECTION A-22-1","SECTION A-22-2","SECTION A-22-3","SECTION A-22-4","SECTION A-22-5","SECTION A-22-6","SECTION A-20-1","SECTION A-20-2","SECTION A-20-3","SECTION A-20-4","SECTION A-20-5","SECTION A-20-6","SECTION B-19-19","SECTION B-19-20","SECTION B-19-21","SECTION B-19-22","SECTION B-19-23","SECTION B-19-24","SECTION B-21-19","SECTION B-21-20","SECTION B-21-21","SECTION B-21-22","SECTION B-21-23","SECTION B-21-24","SECTION B-23-19","SECTION B-23-20","SECTION B-23-21","SECTION B-23-22","SECTION B-23-23","SECTION B-23-24","SECTION B-25-19","SECTION B-25-20","SECTION B-25-21","SECTION B-25-22","SECTION B-25-23","SECTION B-25-24","SECTION B-27-19","SECTION B-27-20","SECTION B-27-21","SECTION B-27-22","SECTION B-27-23","SECTION B-27-24")
final_result %>%
filter(str_detect(seatLabels, "ADA C"))
final_result %>%
filter(str_detect(seatLabels, OK))
print(i)
for (i in 1:length(OK)) {
print(i)
}
OK[1]
final_result %>%
filter(str_detect(seatLabels, OK[1]))
OK_Corral <- data.frame()
OK_Corral <- data.frame()
for (i in 1:length(OK)) {
temp <- final_result %>%
filter(str_detect(seatLabels, OK))
OK_Corral <- rbind(OK_Corral, temp)
}
OK_Corral <- data.frame()
for (i in 1:length(OK)) {
temp <- final_result %>%
filter(str_detect(seatLabels, OK[i]))
OK_Corral <- rbind(OK_Corral, temp)
}
View(OK_Corral)
NO_OK_Corral <- final_result %>%
filter(!email %in% OK_Corral$email)
NO_OK_Corral <- final_result %>%
filter(email %in% OK_Corral$email)
NO_OK_Corral <- final_result %>%
filter(email %in% OK_Corral$email) %>%
distinct()
View(NO_OK_Corral)
OK_Corral <- OK_Corral %>%
distinct()
NO_OK_Corral <- final_result %>%
filter(!email %in% OK_Corral$email)
write_csv(OK_Corral, file = "B_R_OK_CORRAL.csv")
write_csv(NO_OK_Corral, file = "B_R_NORMAL.csv")
write_csv(empties, file = "B_R_NO_EMAIL.csv")
setwd("/Users/tixradmin/Documents/GitHub/mas418_final_project/Glassdoor")
read.csv("jobs_glassdoor_dataset.csv")
check <- read.csv("jobs_glassdoor_dataset.csv")
library(tidyverse)
check <- read.csv("jobs_glassdoor_dataset.csv")
View(check)
library(tidyverse)
setwd("/Users/tixradmin/Documents/GitHub/mas418_final_project/Glassdoor")
check <- read.csv("jobs_glassdoor_dataset.csv")
View(check)
job_data <- read.csv("jobs_glassdoor_dataset.csv")
### Need to clean salary
job_data
### Need to clean salary
job_data$company_salary
str_detect("Employer est.:$78K - $162K ", "[0-9]+")
str_extract_all("Employer est.:$78K - $162K ", "[0-9]+")
i = 1
job_data$company_salary[i]
### Need to clean salary
job_data %>%
filter(!is.na(company_salary))
### Need to clean salary
salary_data <- job_data %>%
filter(!is.na(company_salary))
i
temp <- str_extract_all(salary_data$company_salary[i], "[0-9]+")[[1]]
mean(as.numeric(temp))
for (i in 1:nrow(salary_data)) {
temp <- str_extract_all(salary_data$company_salary[i], "[0-9]+")[[1]]
if (length(temp) == 2) {
salary_temp <- mean(as.numeric(temp))
} else {
salary_temp <- as.numeric(temp)
}
salary_data$salary[i] <- salary_temp
}
View(salary_data)
sum(salary_data$salary > 1000)
write.csv(salary_temp, "salary.csv")
write.csv(salary_data, "salary.csv")
View(salary_data)
check <- c("Data S", "Data C")
str_detect(check, "Data S")
str_detect(check, c("Data S","Data C"))
### Next find the roles
### Role
### Level
role <- c("Data Scientist", "Data Analytics", "Applied Scientist",
"Data Engineer", "Software Engineer", "Data Integration",
"Machine Learning", "Systems Engineer", "Business Analytics",
"Statistician")
salary_data %>%
mutate(Role = ifelse(str_detect(company_offeredRole, role), 1, 0))
check <- c("Data S", "Data C", "Data F")
str_detect(check, c("Data S","Data C"))
check <- "System Data Scientist"
str_detect(check, role)
i = 1
salary_data$company_offeredRole[i]
temp <- salary_data$company_offeredRole[i]
str_detect(temp, role)
role[str_detect(temp, role)]
role_temp <- role[str_detect(temp, role)]
for (i in 1:nrow(salary_data)) {
temp <- salary_data$company_offeredRole[i]
role_temp <- role[str_detect(temp, role)]
salary_data$role[i] <- role_temp
}
i
temp <- salary_data$company_offeredRole[i]
temp
### Next find the roles
### Role
### Level
role <- c("Data Scientist", "Data Analytics", "Applied Scientist",
"Data Engineer", "Software Engineer", "Data Integration",
"Machine Learning", "Systems Engineer", "Business Analytics",
"Statistician", "Data Science")
for (i in 1:nrow(salary_data)) {
temp <- salary_data$company_offeredRole[i]
role_temp <- role[str_detect(temp, role)]
salary_data$role[i] <- role_temp
}
i
temp <- salary_data$company_offeredRole[i]
temp
### Next find the roles
### Role
### Level
role <- c("Data Scientist", "Data Analytics", "Applied Scientist",
"Data Engineer", "Software Engineer", "Data Integration",
"Machine Learning", "Systems Engineer", "Business Analytics",
"Statistician", "Data Science", "Data Analyst")
for (i in 1:nrow(salary_data)) {
temp <- salary_data$company_offeredRole[i]
role_temp <- role[str_detect(temp, role)]
salary_data$role[i] <- role_temp
}
role_change <- c("Data Scientist", "Data Analyst", "Applied Scientist",
"Data Engineer", "Others", "Others",
"Machine Learning", "Others", "Data Analyst",
"Data Scientist", "Data Scientist", "Data Analyst")
for (i in 1:nrow(salary_data)) {
temp <- salary_data$company_offeredRole[i]
role_temp <- role_change[str_detect(temp, role)]
salary_data$role[i] <- role_temp
}
table(salary_data$role)
setwd("/Users/tixradmin/Documents/GitHub/mas418_final_project/Glassdoor/Clean_R_Danny")
write.csv(salary_data, "salary.csv")
salary_data %>%
filter(role %in% c("Machine Learning", "Applied Scientist"))
check <- salary_data %>%
filter(role %in% c("Machine Learning", "Applied Scientist"))
