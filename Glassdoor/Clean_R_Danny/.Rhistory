filter(Section == "Opening Act Glamping") %>%
group_by(`Customer Name`,`Customer Email`) %>%
summarise(count = sum(Quantity)) %>%
mutate(seatLabels_draft = ifelse(count == 1, "GLAMPING OPENING ACT", paste0("GLAMPING OPENING ACT[[Q:",count,"]]"))) %>%
select(`Customer Name`, `Customer Email`, seatLabels_draft)
## Case 2: Homestead (2 cases)
## Case 2.1: Homestead Porch
homestead_porch <- reserve_rsvp %>%
filter(Section == "Homestead Porch") %>%
group_by(`Customer Name`,`Customer Email`) %>%
summarise(count = sum(Quantity)) %>%
mutate(seatLabels_draft = ifelse(count == 1, "Homestead Front Lawn (Individual Pass)", paste0("Homestead Front Lawn (Individual Pass)[[Q:",count,"]]"))) %>%
select(`Customer Name`, `Customer Email`, seatLabels_draft)
## Case 2.2: Homestead Balcony
homestead_balcony <- reserve_rsvp %>%
filter(Section == "The High Life") %>%
group_by(`Customer Name`,`Customer Email`) %>%
summarise(count = sum(Quantity)) %>%
mutate(seatLabels_draft = ifelse(count == 1, "Homestead Balcony (Four-Pass Package)", paste0("Homestead Balcony (Four-Pass Package)[[Q:",count,"]]"))) %>%
select(`Customer Name`, `Customer Email`, seatLabels_draft)
## Case 3: Stables (6 cases)
stables <- reserve_rsvp %>%
filter(Section == "The Stables") %>%
group_by(`Customer Name`,`Customer Email`) %>%
summarise(count = sum(Quantity)) %>%
mutate(seatLabels_draft = ifelse(count == 1, "STABLES PACKAGES (6 person package)", paste0("STABLES PACKAGES (6 person package)[[Q:",count,"]]"))) %>%
select(`Customer Name`, `Customer Email`, seatLabels_draft)
## Combine Everything
others <- rbind(camping_glamping_head_2, camping_glamping_head_4, camping_glamping_opening,
homestead_porch, homestead_balcony, stables) %>%
ungroup() %>%
group_by(`Customer Name`,`Customer Email`) %>%
summarise(seatLabels = paste(seatLabels_draft, collapse = ","))
result <- rbind(admission,
camping,
others) %>%
ungroup() %>%
group_by(`Customer Name`,`Customer Email`) %>%
summarise(seatLabels = paste(seatLabels, collapse = ","))
length(unique(result$`Customer Email`))
nrow(result)
final_result <- result %>%
mutate(firstName = str_split(`Customer Name`, " ")[[1]][1],
lastName = str_split(`Customer Name`, " ")[[1]][2],
email = `Customer Email`) %>%
ungroup() %>%
select(firstName, lastName, email, seatLabels)
final_result
### We want two lists, one for OK Corral and one without
OK <- c("SECTION A-19-13","SECTION A-19-14","SECTION A-19-15","SECTION A-19-16","SECTION A-19-17","SECTION A-19-18","SECTION A-21-13","SECTION A-21-14","SECTION A-21-15","SECTION A-21-16","SECTION A-21-17","SECTION A-21-18","SECTION A-23-13","SECTION A-23-14","SECTION A-23-15","SECTION A-23-16","SECTION A-23-17","SECTION A-23-18","SECTION A-25-13","SECTION A-25-14","SECTION A-25-15","SECTION A-25-16","SECTION A-25-17","SECTION A-25-18","SECTION A-27-13","SECTION A-27-14","SECTION A-27-15","SECTION A-27-16","SECTION A-27-17","SECTION A-27-18","SECTION A-29-13","SECTION A-29-14","SECTION A-29-15","SECTION A-29-16","SECTION A-29-17","SECTION A-29-18","SECTION A-31-13","SECTION A-31-14","SECTION A-31-15","SECTION A-31-16","SECTION A-31-17","SECTION A-31-18","SECTION A-33-13","SECTION A-33-14","SECTION A-33-15","SECTION A-33-16","SECTION A-33-17","SECTION A-33-18","SECTION A-32-1","SECTION A-32-2","SECTION A-32-3","SECTION A-32-4","SECTION A-32-5","SECTION A-32-6","SECTION A-30-1","SECTION A-30-2","SECTION A-30-3","SECTION A-30-4","SECTION A-30-5","SECTION A-30-6","SECTION A-28-1","SECTION A-28-2","SECTION A-28-3","SECTION A-28-4","SECTION A-28-5","SECTION A-28-6","SECTION A-26-1","SECTION A-26-2","SECTION A-26-3","SECTION A-26-4","SECTION A-26-5","SECTION A-26-6","SECTION A-24-1","SECTION A-24-2","SECTION A-24-3","SECTION A-24-4","SECTION A-24-5","SECTION A-24-6","SECTION A-22-1","SECTION A-22-2","SECTION A-22-3","SECTION A-22-4","SECTION A-22-5","SECTION A-22-6","SECTION A-20-1","SECTION A-20-2","SECTION A-20-3","SECTION A-20-4","SECTION A-20-5","SECTION A-20-6","SECTION B-19-19","SECTION B-19-20","SECTION B-19-21","SECTION B-19-22","SECTION B-19-23","SECTION B-19-24","SECTION B-21-19","SECTION B-21-20","SECTION B-21-21","SECTION B-21-22","SECTION B-21-23","SECTION B-21-24","SECTION B-23-19","SECTION B-23-20","SECTION B-23-21","SECTION B-23-22","SECTION B-23-23","SECTION B-23-24","SECTION B-25-19","SECTION B-25-20","SECTION B-25-21","SECTION B-25-22","SECTION B-25-23","SECTION B-25-24","SECTION B-27-19","SECTION B-27-20","SECTION B-27-21","SECTION B-27-22","SECTION B-27-23","SECTION B-27-24")
final_result %>%
filter(str_detect(seatLabels, "ADA C"))
final_result %>%
filter(str_detect(seatLabels, OK))
print(i)
for (i in 1:length(OK)) {
print(i)
}
OK[1]
final_result %>%
filter(str_detect(seatLabels, OK[1]))
OK_Corral <- data.frame()
OK_Corral <- data.frame()
for (i in 1:length(OK)) {
temp <- final_result %>%
filter(str_detect(seatLabels, OK))
OK_Corral <- rbind(OK_Corral, temp)
}
OK_Corral <- data.frame()
for (i in 1:length(OK)) {
temp <- final_result %>%
filter(str_detect(seatLabels, OK[i]))
OK_Corral <- rbind(OK_Corral, temp)
}
View(OK_Corral)
NO_OK_Corral <- final_result %>%
filter(!email %in% OK_Corral$email)
NO_OK_Corral <- final_result %>%
filter(email %in% OK_Corral$email)
NO_OK_Corral <- final_result %>%
filter(email %in% OK_Corral$email) %>%
distinct()
View(NO_OK_Corral)
OK_Corral <- OK_Corral %>%
distinct()
NO_OK_Corral <- final_result %>%
filter(!email %in% OK_Corral$email)
write_csv(OK_Corral, file = "B_R_OK_CORRAL.csv")
write_csv(NO_OK_Corral, file = "B_R_NORMAL.csv")
write_csv(empties, file = "B_R_NO_EMAIL.csv")
setwd("/Users/tixradmin/Documents/GitHub/mas418_final_project/Glassdoor")
read.csv("jobs_glassdoor_dataset.csv")
check <- read.csv("jobs_glassdoor_dataset.csv")
library(tidyverse)
check <- read.csv("jobs_glassdoor_dataset.csv")
View(check)
library(tidyverse)
setwd("/Users/tixradmin/Documents/GitHub/mas418_final_project/Glassdoor")
check <- read.csv("jobs_glassdoor_dataset.csv")
View(check)
job_data <- read.csv("jobs_glassdoor_dataset.csv")
### Need to clean salary
job_data
### Need to clean salary
job_data$company_salary
str_detect("Employer est.:$78K - $162K ", "[0-9]+")
str_extract_all("Employer est.:$78K - $162K ", "[0-9]+")
i = 1
job_data$company_salary[i]
### Need to clean salary
job_data %>%
filter(!is.na(company_salary))
### Need to clean salary
salary_data <- job_data %>%
filter(!is.na(company_salary))
i
temp <- str_extract_all(salary_data$company_salary[i], "[0-9]+")[[1]]
mean(as.numeric(temp))
for (i in 1:nrow(salary_data)) {
temp <- str_extract_all(salary_data$company_salary[i], "[0-9]+")[[1]]
if (length(temp) == 2) {
salary_temp <- mean(as.numeric(temp))
} else {
salary_temp <- as.numeric(temp)
}
salary_data$salary[i] <- salary_temp
}
View(salary_data)
sum(salary_data$salary > 1000)
write.csv(salary_temp, "salary.csv")
write.csv(salary_data, "salary.csv")
View(salary_data)
check <- c("Data S", "Data C")
str_detect(check, "Data S")
str_detect(check, c("Data S","Data C"))
### Next find the roles
### Role
### Level
role <- c("Data Scientist", "Data Analytics", "Applied Scientist",
"Data Engineer", "Software Engineer", "Data Integration",
"Machine Learning", "Systems Engineer", "Business Analytics",
"Statistician")
salary_data %>%
mutate(Role = ifelse(str_detect(company_offeredRole, role), 1, 0))
check <- c("Data S", "Data C", "Data F")
str_detect(check, c("Data S","Data C"))
check <- "System Data Scientist"
str_detect(check, role)
i = 1
salary_data$company_offeredRole[i]
temp <- salary_data$company_offeredRole[i]
str_detect(temp, role)
role[str_detect(temp, role)]
role_temp <- role[str_detect(temp, role)]
for (i in 1:nrow(salary_data)) {
temp <- salary_data$company_offeredRole[i]
role_temp <- role[str_detect(temp, role)]
salary_data$role[i] <- role_temp
}
i
temp <- salary_data$company_offeredRole[i]
temp
### Next find the roles
### Role
### Level
role <- c("Data Scientist", "Data Analytics", "Applied Scientist",
"Data Engineer", "Software Engineer", "Data Integration",
"Machine Learning", "Systems Engineer", "Business Analytics",
"Statistician", "Data Science")
for (i in 1:nrow(salary_data)) {
temp <- salary_data$company_offeredRole[i]
role_temp <- role[str_detect(temp, role)]
salary_data$role[i] <- role_temp
}
i
temp <- salary_data$company_offeredRole[i]
temp
### Next find the roles
### Role
### Level
role <- c("Data Scientist", "Data Analytics", "Applied Scientist",
"Data Engineer", "Software Engineer", "Data Integration",
"Machine Learning", "Systems Engineer", "Business Analytics",
"Statistician", "Data Science", "Data Analyst")
for (i in 1:nrow(salary_data)) {
temp <- salary_data$company_offeredRole[i]
role_temp <- role[str_detect(temp, role)]
salary_data$role[i] <- role_temp
}
role_change <- c("Data Scientist", "Data Analyst", "Applied Scientist",
"Data Engineer", "Others", "Others",
"Machine Learning", "Others", "Data Analyst",
"Data Scientist", "Data Scientist", "Data Analyst")
for (i in 1:nrow(salary_data)) {
temp <- salary_data$company_offeredRole[i]
role_temp <- role_change[str_detect(temp, role)]
salary_data$role[i] <- role_temp
}
table(salary_data$role)
setwd("/Users/tixradmin/Documents/GitHub/mas418_final_project/Glassdoor/Clean_R_Danny")
write.csv(salary_data, "salary.csv")
salary_data %>%
filter(role %in% c("Machine Learning", "Applied Scientist"))
check <- salary_data %>%
filter(role %in% c("Machine Learning", "Applied Scientist"))
library(tidyverse)
setwd("/Users/tixradmin/Documents/GitHub/mas418_final_project/Glassdoor")
job_data <- read.csv("jobs_glassdoor_dataset.csv")
setwd("/Users/tixradmin/Documents/GitHub/mas418_final_project/Glassdoor/Clean_R_Danny")
library(tidyverse)
setwd("/Users/tixradmin/Documents/GitHub/mas418_final_project/Glassdoor")
job_data <- read.csv("jobs_glassdoor_dataset.csv")
setwd("/Users/tixradmin/Documents/GitHub/mas418_final_project/Glassdoor/Clean_R_Danny")
View(job_data)
salary_data <- job_data %>%
filter(!is.na(company_salary))
str_extract_all("Employer est.:$78K - $162K ", "[0-9]+")
for (i in 1:nrow(salary_data)) {
temp <- str_extract_all(salary_data$company_salary[i], "[0-9]+")[[1]]
if (length(temp) == 2) {
salary_temp <- mean(as.numeric(temp))
} else {
salary_temp <- as.numeric(temp)
}
salary_data$salary[i] <- salary_temp
}
write.csv(salary_data, "salary.csv")
### Next find the roles
### Role
### Level
role <- c("Data Scientist", "Data Analytics", "Applied Scientist",
"Data Engineer", "Software Engineer", "Data Integration",
"Machine Learning", "Systems Engineer", "Business Analytics",
"Statistician", "Data Science", "Data Analyst")
role_change <- c("Data Scientist", "Data Analyst", "Machine Learning",
"Data Engineer", "Others", "Others",
"Machine Learning", "Others", "Data Analyst",
"Data Scientist", "Data Scientist", "Data Analyst")
for (i in 1:nrow(salary_data)) {
temp <- salary_data$company_offeredRole[i]
role_temp <- role_change[str_detect(temp, role)]
salary_data$role[i] <- role_temp
}
table(salary_data$role)
write.csv(salary_data, "salary.csv")
check <- salary_data %>%
filter(role %in% c("Machine Learning", "Applied Scientist"))
View(salary_data)
### Next location
salary_dat
### Next location
salary_data
salary_data$company_roleLocation
temp <- "Rosslyn, VA"
length(temp)
check <- length(temp)
substr("Rosslyn, VA", check -2, check)
check
check <- length(temp)
check <- nchar(temp)
substr("Rosslyn, VA", check-2, check)
substr("Rosslyn, VA", check-1, check)
i = 1
temp <- salary_data$company_roleLocation[i]
num <- nchar(temp)
num
### Next location
for (i in 1:nrow(salary_data)) {
temp <- salary_data$company_roleLocation[i]
num <- nchar(temp)
if (temp == "Remote") {
salary_data$location[i] <- "Remote"
} else {
salary_data$location[i] <- substr(temp, num-1, num)
}
}
View(salary_data)
table(salary_data$location)
### Also Skills
salary_data %>%
mutate(R = ifelse(str_detect(listing_jobDesc, "R"), 1, 0),
Python = ifelse(str_detect(listing_jobDesc, "Python"), 1, 0),
SQL = ifelse(str_detect(listing_jobDesc, "SQL"), 1, 0))
### Also Skills
check <- salary_data %>%
mutate(R = ifelse(str_detect(listing_jobDesc, "R"), 1, 0),
Python = ifelse(str_detect(listing_jobDesc, "Python"), 1, 0),
SQL = ifelse(str_detect(listing_jobDesc, "SQL"), 1, 0))
View(check)
sum(check$R)/nrow(check)
sum(check$SQL)/nrow(check)
sum(check$R)/nrow(check)
sum(check$Python)/nrow(check)
sum(check$SQL)/nrow(check)
sum(check$SQL)
sum(check$Python)
sum(check$R)
### Also Skills
salary_data <- salary_data %>%
mutate(R = ifelse(str_detect(listing_jobDesc, "R"), 1, 0),
Python = ifelse(str_detect(listing_jobDesc, "Python"), 1, 0),
SQL = ifelse(str_detect(listing_jobDesc, "SQL"), 1, 0))
sum(salary_data$R)/nrow(check)
sum(salary_data$Python)/nrow(check)
sum(salary_data$SQL)/nrow(check)
write.csv(salary_data, "salary.csv")
library(tidyverse)
setwd("/Users/tixradmin/Documents/GitHub/mas418_final_project/Glassdoor/output")
job_data <- read.csv("output_.csv")
setwd("/Users/tixradmin/Documents/GitHub/mas418_final_project/Glassdoor/Clean_R_Danny")
View(job_data)
job_data %>% distinct()
check <- job_data %>% distinct()
check <- job_data %>% select(companyName, company_offeredRole, company_salary) %>% distinct()
View(check)
job_data %>% filter(companyName == "Kum & Go")
check1 <- job_data %>% filter(companyName == "Kum & Go")
View(check1)
check1$requested_url
check1 %>% select(listing_jobDesc) %>% distinct()
check2 <- check1 %>% select(listing_jobDesc) %>% distinct()
colnames(job_data)
### Need to clean salary
job_data %>%
select(-requested_url)
### Need to clean salary
job_data <- job_data %>%
select(-requested_url)
salary_data <- job_data %>%
filter(!is.na(company_salary))
for (i in 1:nrow(salary_data)) {
temp <- str_extract_all(salary_data$company_salary[i], "[0-9]+")[[1]]
if (length(temp) == 2) {
salary_temp <- mean(as.numeric(temp))
} else {
salary_temp <- as.numeric(temp)
}
salary_data$salary[i] <- salary_temp
}
write.csv(salary_data, "salary.csv")
View(salary_data)
role <- c("Data Scientist", "Data Analytics", "Applied Scientist",
"Data Engineer", "Software Engineer", "Data Integration",
"Machine Learning", "Systems Engineer", "Business Analytics",
"Statistician", "Data Science", "Data Analyst")
role_change <- c("Data Scientist", "Data Analyst", "Machine Learning",
"Data Engineer", "Others", "Others",
"Machine Learning", "Others", "Data Analyst",
"Data Scientist", "Data Scientist", "Data Analyst")
for (i in 1:nrow(salary_data)) {
temp <- salary_data$company_offeredRole[i]
role_temp <- role_change[str_detect(temp, role)]
salary_data$role[i] <- role_temp
}
i
salary_data$company_offeredRole[i]
role <- c("Data Scientist", "Data Analytics", "Applied Scientist",
"Data Engineer", "Software Engineer", "Data Integration",
"Machine Learning", "Systems Engineer", "Business Analytics",
"Statistician", "Data Science", "Data Analyst",
"System Technician")
role_change <- c("Data Scientist", "Data Analyst", "Machine Learning",
"Data Engineer", "Others", "Others",
"Machine Learning", "Others", "Data Analyst",
"Data Scientist", "Data Scientist", "Data Analyst",
"Others")
for (i in 1:nrow(salary_data)) {
temp <- salary_data$company_offeredRole[i]
role_temp <- role_change[str_detect(temp, role)]
salary_data$role[i] <- role_temp
}
i
salary_data$company_offeredRole[i]
role <- c("Data Scientist", "Data Analytics", "Applied Scientist",
"Data Engineer", "Software Engineer", "Data Integration",
"Machine Learning", "Systems Engineer", "Business Analytics",
"Statistician", "Data Science", "Data Analyst",
"System Technician", "Artificial Intelligence")
role_change <- c("Data Scientist", "Data Analyst", "Machine Learning",
"Data Engineer", "Others", "Others",
"Machine Learning", "Others", "Data Analyst",
"Data Scientist", "Data Scientist", "Data Analyst",
"Others", "Machine Learning")
for (i in 1:nrow(salary_data)) {
temp <- salary_data$company_offeredRole[i]
role_temp <- role_change[str_detect(temp, role)]
salary_data$role[i] <- role_temp
}
i
salary_data$company_offeredRole[i]
role <- c("Data Scientist", "Data Analytics", "Applied Scientist",
"Data Engineer", "Software Engineer", "Data Integration",
"Machine Learning", "Systems Engineer", "Business Analytics",
"Statistician", "Data Science", "Data Analyst",
"System Technician", "Artificial Intelligence", "Decision Scientist")
role_change <- c("Data Scientist", "Data Analyst", "Machine Learning",
"Data Engineer", "Others", "Others",
"Machine Learning", "Others", "Data Analyst",
"Data Scientist", "Data Scientist", "Data Analyst",
"Others", "Machine Learning", "Data Scientist")
for (i in 1:nrow(salary_data)) {
temp <- salary_data$company_offeredRole[i]
role_temp <- role_change[str_detect(temp, role)]
salary_data$role[i] <- role_temp
}
i
salary_data$company_offeredRole[i]
role <- c("Data Scientist", "Data Analytics", "Applied Scientist",
"Data Engineer", "Software Engineer", "Data Integration",
"Machine Learning", "Systems Engineer", "Business Analytics",
"Statistician", "Data Science", "Data Analyst",
"System Technician", "Artificial Intelligence", "Decision Scientist",
"Natural Language Processing")
role_change <- c("Data Scientist", "Data Analyst", "Machine Learning",
"Data Engineer", "Others", "Others",
"Machine Learning", "Others", "Data Analyst",
"Data Scientist", "Data Scientist", "Data Analyst",
"Others", "Machine Learning", "Data Scientist",
"Machine Learning")
for (i in 1:nrow(salary_data)) {
temp <- salary_data$company_offeredRole[i]
role_temp <- role_change[str_detect(temp, role)]
salary_data$role[i] <- role_temp
}
i
salary_data$company_offeredRole[i]
for (i in 1:nrow(salary_data)) {
temp <- salary_data$company_offeredRole[i]
role_temp <- role_change[str_detect(temp, role)]
salary_data$role[i] <- role_temp
}
i
salary_data$company_offeredRole[i]
role <- c("Data Scientist", "Data Analytics", "Applied Scientist",
"Data Engineer", "Software Engineer", "Data Integration",
"Machine Learning", "Systems Engineer", "Business Analytics",
"Statistician", "Data Science", "Data Analyst",
"System Technician", "Artificial Intelligence", "Decision Scientist",
"Natural Language Processing", "Data Architect")
role_change <- c("Data Scientist", "Data Analyst", "Machine Learning",
"Data Engineer", "Others", "Others",
"Machine Learning", "Others", "Data Analyst",
"Data Scientist", "Data Scientist", "Data Analyst",
"Others", "Machine Learning", "Data Scientist",
"Machine Learning", "Data Engineer")
for (i in 1:nrow(salary_data)) {
temp <- salary_data$company_offeredRole[i]
role_temp <- role_change[str_detect(temp, role)]
salary_data$role[i] <- role_temp
}
salary_data$company_offeredRole[i]
role <- c("Data Scientist", "Data Analytics", "Applied Scientist",
"Data Engineer", "Software Engineer", "Data Integration",
"Machine Learning", "Systems Engineer", "Business Analytics",
"Statistician", "Data Science", "Data Analyst",
"System Technician", "Artificial Intelligence", "Decision Scientist",
"Natural Language Processing", "Data Architect", "Modeling")
role_change <- c("Data Scientist", "Data Analyst", "Machine Learning",
"Data Engineer", "Others", "Others",
"Machine Learning", "Others", "Data Analyst",
"Data Scientist", "Data Scientist", "Data Analyst",
"Others", "Machine Learning", "Data Scientist",
"Machine Learning", "Data Engineer", "Data Scientist")
for (i in 1:nrow(salary_data)) {
temp <- salary_data$company_offeredRole[i]
role_temp <- role_change[str_detect(temp, role)]
salary_data$role[i] <- role_temp
}
salary_data$company_offeredRole[i]
role <- c("Data Scientist", "Data Analytics", "Applied Scientist",
"Data Engineer", "Software Engineer", "Data Integration",
"Machine Learning", "Systems Engineer", "Business Analytics",
"Statistician", "Data Science", "Data Analyst",
"System Technician", "Artificial Intelligence", "Decision Scientist",
"Natural Language Processing", "Data Architect", "Modeling",
"Data Review")
role_change <- c("Data Scientist", "Data Analyst", "Machine Learning",
"Data Engineer", "Others", "Others",
"Machine Learning", "Others", "Data Analyst",
"Data Scientist", "Data Scientist", "Data Analyst",
"Others", "Machine Learning", "Data Scientist",
"Machine Learning", "Data Engineer", "Data Scientist",
"Data Analyst")
for (i in 1:nrow(salary_data)) {
temp <- salary_data$company_offeredRole[i]
role_temp <- role_change[str_detect(temp, role)]
salary_data$role[i] <- role_temp
}
i
table(salary_data$role)
for (i in 1:nrow(salary_data)) {
temp <- salary_data$company_roleLocation[i]
num <- nchar(temp)
if (temp == "Remote") {
salary_data$location[i] <- "Remote"
} else {
salary_data$location[i] <- substr(temp, num-1, num)
}
}
table(salary_data$location)
salary_data <- salary_data %>%
mutate(R = ifelse(str_detect(listing_jobDesc, "R"), 1, 0),
Python = ifelse(str_detect(listing_jobDesc, "Python"), 1, 0),
SQL = ifelse(str_detect(listing_jobDesc, "SQL"), 1, 0))
sum(salary_data$R)/nrow(check)
sum(salary_data$Python)/nrow(check)
sum(salary_data$SQL)/nrow(check)
salary_data
sum(salary_data$R)/nrow(salary_data)
sum(salary_data$Python)/nrow(salary_data)
sum(salary_data$SQL)/nrow(salary_data)
write.csv(salary_data, "salary.csv")
